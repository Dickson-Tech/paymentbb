version: 2.1
setup: true
orbs:
  test-harness: govstack-working-group/testutils@1.0.1
  aws-eks: circleci/aws-eks@2.2.0 
  slack: circleci/slack@4.12.5
  helm: circleci/helm@2.0.1
  kubernetes: circleci/kubernetes@1.3
  aws-cli: circleci/aws-cli@4.0.0

jobs:
  deploy-g2psandbox-govstack-chart:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - aws-cli/setup:
          role_arn: "${AWS_CIRCLECI_ROLE_ARN}"
          region: AWS_REGION
          profile_name: "playground"
          role_session_name: deploy-test
          session_duration: '1800'
      - helm/install-helm-client:
          version: v3.2.0
      - run:
          name: Update kubeconfig
          command: |
            aws eks update-kubeconfig --name ${EKS_CLUSTER}     
   
      # Deploy Helm chart to EKS
      - run:
          name: Deploy Helm chart to EKS
          command: |
            # Clone your GitHub repository
            git clone https://github.com/GovStackWorkingGroup/bb-payments.git
            # Install Helm chart
            # helm repo add fyn https://fynarfin.io/images/
            # helm repo update
            cd bb-payments/
            helm dep up helm/govstack-chart
            helm package helm/govstack-chart
            helm upgrade --install -f helm/govstack-chart/values.yaml g2p-sandbox helm/govstack-chart --create-namespace  --namespace paymenthub
            # helm upgrade --install g2p-sandbox ./helm/govstack-chart
  deploy-fineract-helm-chart:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - aws-cli/setup:
          role_arn: "${AWS_CIRCLECI_ROLE_ARN}"
          region: AWS_REGION
          profile_name: "playground"
          role_session_name: deploy-test
          session_duration: '1800'
      - helm/install-helm-client:
          version: v3.2.0
      - run:
          name: Update kubeconfig
          command: |
            aws eks update-kubeconfig --name ${EKS_CLUSTER} 
      - helm/upgrade-helm-chart:
          add-repo: "https://fynarfin.io/images/fineract/"
          chart: "https://fynarfin.io/images/fineract/fin-engine-1.0.0-SNAPSHOT.tgz"
          release-name: fineract
          namespace: fineract
          recreate-pods: true
          wait: true
          timeout: "300s"

  create-secret:
    docker:
      - image: cimg/base:2022.06 
    steps: 
      - checkout
      # - setup_remote_docker:
      #       version: 20.10.14
      - aws-cli/setup:
          role_arn: "${AWS_CIRCLECI_ROLE_ARN}"
          region: AWS_REGION
          profile_name: "playground"
          role_session_name: deploy-test
          session_duration: '1800'
      - run:
          name: Update kubeconfig
          command: |
            aws eks update-kubeconfig --name ${EKS_CLUSTER} 
      - kubernetes/install-kubectl
      # - aws-eks/update-kubeconfig-with-authenticator:
      #     cluster-name: "GStack-sb-eks-plg"
      #     aws-region: "$REGION"
      - run: |
          cd helm/kibana-secret/
          make secrets || echo "kibana" already exists
      - run: |
          cd helm/es-secret/
          make secrets || echo "elastic-certificates" already exists

      # - run: |
      #     kubectl delete secret bulk-processor-secret -n paymenthub || echo "delete the secret if exist"
      #     kubectl create secret generic bulk-processor-secret \
      #     --from-literal=aws-access-key="$S3_ACCESS_KEY_ID" \
      #     --from-literal=aws-secret-key="$S3_SECRET_ACCESS_KEY" -n paymenthub

  deploying-bpmns:
    docker:
      - image: cimg/base:2022.06 
      - image: 'curlimages/curl:8.2.1'   
    steps:
      - checkout
      - aws-cli/setup:
          role_arn: "${AWS_CIRCLECI_ROLE_ARN}"
          region: AWS_REGION
          profile_name: "playground"
          role_session_name: deploy-test
          session_duration: '1800'
      - run:
          name: Update kubeconfig
          command: |
            aws eks update-kubeconfig --name ${EKS_CLUSTER} 
      - run: sh orchestration/deployBpmn.sh

  helm-test:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - aws-cli/setup:
          role_arn: "${AWS_CIRCLECI_ROLE_ARN}"
          region: AWS_REGION
          profile_name: "playground"
          role_session_name: deploy-test
          session_duration: '1800'
      - run:
          name: Update kubeconfig
          command: |
            aws eks update-kubeconfig --name ${EKS_CLUSTER}
      - helm/install-helm-client:
          version: v3.2.0
      - run:
          name: Run Helm Tests
          command: |
            helm test g2p-sandbox  --namespace paymenthub 
  
  test-chart-gov:
    docker:
      - image: cimg/openjdk:17.0.0
    steps:
      - run: git clone https://github.com/somanath21/ph-ee-integration-test.git
      - run: cd ph-ee-integration-test && ./gradlew test -Dcucumber.filter.tags="@gov" 
      - store_test_results:
          path: ph-ee-integration-test/build/cucumber.xml
      - store_artifacts:
          path: ph-ee-integration-test/build/reports/tests/test
  test-chart-ams:
    docker:
      - image: cimg/openjdk:17.0.0
    steps:
      - run: git clone https://github.com/openmf/ph-ee-integration-test
      - run: cd ph-ee-integration-test && ./gradlew test -Dcucumber.filter.tags="@amsIntegration"
      - store_test_results:
          path: ph-ee-integration-test/build/cucumber.xml
      - store_artifacts:
          path: ph-ee-integration-test/build/reports/tests/test

workflows:
  deploy:
    jobs:
      - deploy-g2psandbox-govstack-chart:
          context: # CircleCI context containing AWS credentials
            - AWS 
            - playground
      - deploy-fineract-helm-chart:
          context: 
            - AWS
            - playground
      - create-secret:
          requires:
            - deploy-g2psandbox-govstack-chart
          context: 
            - AWS
            - playground
      - deploying-bpmns:
          requires:
            - deploy-g2psandbox-govstack-chart
          context: 
            - AWS
            - playground
      - helm-test:
          requires:
            - create-secret
          context: 
            - AWS
            - playground
      - test-chart-gov: 
          requires:
            - create-secret
          context: 
            - AWS
            - playground
      - test-chart-ams:
          requires:
            - create-secret
          context: 
            - AWS
            - playground
      

 
      # - test-harness/create-config:
      #     post-steps: # Persist to workspace has to be defined in main workflow
      #       - persist_to_workspace:
      #           root: workspace
      #           paths:
      #             - generated.yml
      # - test-harness/execute-tests:
      #     requires:
      #       - test-harness/create-config             
  
