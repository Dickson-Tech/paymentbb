version: 2.1
setup: true
orbs:
  test-harness: govstack-working-group/testutils@1.0.4
  aws-eks: circleci/aws-eks@2.2.0 
  slack: circleci/slack@4.12.5
  helm: circleci/helm@2.0.1
  kubernetes: circleci/kubernetes@1.3
  aws-cli: circleci/aws-cli@4.0.0

jobs:
  create-secret:
    docker:
      - image: cimg/base:2022.06 
    steps: 
      - checkout
      # - setup_remote_docker:
      #       version: 20.10.14
      # - aws-cli/setup:
      #     role_arn: "${AWS_CIRCLECI_ROLE_ARN}"
      #     region: AWS_REGION
      #     profile_name: "playground"
      #     role_session_name: deploy-test
      #     session_duration: '1800'
      - run:
          name: Update kubeconfig
          command: |
            aws eks update-kubeconfig --name ${EKS_CLUSTER} 
      - kubernetes/install-kubectl
      # - aws-eks/update-kubeconfig-with-authenticator:
      #     cluster-name: "GStack-sb-eks-plg"
      #     aws-region: "$REGION"
      - run: |
          cd helm/kibana-secret/
          make secrets || echo "kibana" already exists
      - run: |
          cd helm/es-secret/
          make secrets || echo "elastic-certificates" already exists
      - run: |
          export ENV_NAMESPACE=paymenthub
          kubectl delete secret bulk-processor-secret -n $ENV_NAMESPACE || echo "delete the secret if exist"
          kubectl create secret generic bulk-processor-secret \
          --from-literal=aws-access-key="$S3_ACCESS_KEY_ID" \
          --from-literal=aws-secret-key="$S3_SECRET_ACCESS_KEY" -n $ENV_NAMESPACE

  deploying-bpmns:
    docker:
      - image: cimg/base:2022.06 
      - image: 'curlimages/curl:8.2.1'   
    steps:
      - checkout
      - aws-cli/setup:
          role_arn: "${AWS_CIRCLECI_ROLE_ARN}"
          region: AWS_REGION
          profile_name: "playground"
          role_session_name: deploy-test
          session_duration: '1800'
      - run:
          name: Update kubeconfig
          command: |
            echo "$AWS_CIRCLECI_ROLE_ARN"
            aws eks update-kubeconfig --name ${EKS_CLUSTER} 
      - run: sh orchestration/deployBpmn.sh

  helm-test:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - aws-cli/setup:
          role_arn: "${AWS_CIRCLECI_ROLE_ARN}"
          region: AWS_REGION
          profile_name: "playground"
          role_session_name: deploy-test
          session_duration: '1800'
      - run:
          name: Update kubeconfig
          command: |
            aws eks update-kubeconfig --name ${EKS_CLUSTER}
      - helm/install-helm-client:
          version: "v3.8.2"
      - run:
          name: Run Helm Tests
          command: |
            helm test g2p-sandbox --namespace paymenthub || echo test
      - run:
          name: Fetch Integration Test Report
          command: |
            mkdir integration_report
            kubectl cp paymenthub/`kubectl get pods -n paymenthub | grep g2p-sandbox-test-connection |cut -d " " -f1`:/ph-ee-connector-integration-test/build/reports/tests/test/ ./integration_report
      - run:
          name: List Contents of Integration Report Directory
          command: |
            ls -l ./integration_report
      - store_artifacts:
          path: ./integration_report
          destination: integration_reports 

workflows:
  deploy:
    jobs:  
      - test-harness/create-config:
          post-steps: # Persist to workspace has to be defined in main workflow
            - persist_to_workspace:
                root: workspace
                paths:
                  - generated.yml
            - aws-cli/setup:
              role_arn: "${AWS_CIRCLECI_ROLE_ARN}"
              region: AWS_REGION
              profile_name: "playground"
              role_session_name: deploy-test
              session_duration: '1800'
          context: 
          - AWS
          - playground
      - test-harness/execute-tests:
          requires:
            - test-harness/create-config 
      - create-secret:
          requires:
            - test-harness/execute-tests
          context: 
            - AWS
            - playground
      - deploying-bpmns:
          requires:
            - test-harness/execute-tests
          context: 
            - AWS
            - playground
      - helm-test:
          requires:
            - create-secret
            - deploying-bpmns
          context: 
            - AWS
            - playground